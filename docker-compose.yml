version: '2.2'

networks:
  uri-shortener:
    external: true

services:
  uri-shortener-proxy:
    container_name: uri-shortener-proxy
    image: traefik:v2.7
    labels:
      - "--log.level=DEBUG"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - uri-shortener
    ports:
      - "80:80"
      - "443:443"
      - "8282:8080"
    command: --api.insecure=true --providers.docker

  api-shortener:
    container_name: api-shortener
    image: api-shortener
    labels:
      - traefik.enable=true
      - traefik.http.routers.api-shortener.rule=Host(`api-shortener.local`)
      - traefik.http.routers.api-shortener.service=api-shortener-service
      - traefik.http.services.api-shortener-service.loadbalancer.server.port=3000
    tty: true
    stdin_open: true
    build:
      context: ./api
      cache_from:
        - ruby:2.6.4-alpine
    env_file:
      - ./config/api.env
    ports:
      - "3001:3000"
    volumes:
      - ./api:/app
    depends_on:
      - rabbitmq
      - postgres
      - redis
    links:
      - rabbitmq
      - postgres
      - redis
    networks:
      - uri-shortener

  # api-shortener-worker:
  #   container_name: api-shortener-worker
  #   image: api-shortener
  #   tty: true
  #   stdin_open: true
  #   environment:
  #     - SERVICE_TYPE=worker
  #   env_file:
  #     - ./config/api.env
  #   volumes:
  #     - ./api:/app
  #   depends_on:
  #     - rabbitmq
  #     - postgres
  #     - redis
  #   links:
  #     - rabbitmq
  #     - postgres
  #     - redis

  postgres:
    container_name: postgresql
    image: postgres:12.3-alpine
    volumes:
      - ./tmp/postgres:/var/lib/postgresql/data
    env_file:
      - ./config/postgres.env
    ports:
      - "5433:5432"

  redis:
    container_name: redis
    image: redis
    command: redis-server --requirepass Redis2020!
    ports:
      - "6379:6379"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.7.5-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

  client-shortener:
    container_name: client-shortener
    image: client-shortener
    labels:
      - traefik.enable=true
      - traefik.http.routers.client-shortener.rule=Host(`client-shortener.local`)
    stdin_open: true
    tty: true
    build:
      context: ./client
    ports:
      - "8080:8080"
    volumes:
      - ./client:/app
    env_file:
      ./config/client.env
    networks:
      - uri-shortener

